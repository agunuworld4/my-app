node {
     
     def buildNumber = BUILD_NUMBER
    def mvnHome = tool 'myMaven4'
    
    stage ("checkout")  {
    git credentialsId: 'git-authentication-jenkins-login', url: 'https://github.com/agunuworld4/my-app.git'
    }

  
  stage ('build')  {
    sh "${mvnHome}/bin/mvn clean install "
    }

   stage ('Slack notification')  {
        //slackSend(channel:'channel-name', message: "jenkins Job is successfully build, here is the info -  Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
      slackSend baseUrl: 'https://hooks.slack.com/services/', channel: '#ï»¿jenkins-devops-microservices', color: 'good', message: 'jenkins Job is successfully build  jenkins devops microservices', tokenCredentialId: 'slack-authenticaiton-connection'
      }
      
       stage ('Code Quality scan')  {
       withSonarQubeEnv('SonarQube') {
       sh "${mvnHome}/bin/mvn  sonar:sonar"
        }
   }
      
      stage ("Deploy on Tomcat")   {
      deploy adapters: [tomcat9(credentialsId: 'tomcat-deployment-connection', path: '', url: 'http://35.236.11.250:8090/')], contextPath: 'my-app', war: '**/*.war'
     }
      
   }


 
